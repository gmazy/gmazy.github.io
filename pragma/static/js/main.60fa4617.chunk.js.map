{"version":3,"sources":["index.js"],"names":["Formi","props","numOfFields","pKysymykset","osaAlue","name","value","persentiiliSarake","csvPersentiili","row","persentiili","trim","replace","split","map","i","forEach","item","length","type","translated","fields","Array","fill","fieldSubmittable","key","pKys","pKysb","translation","fieldsInfo","includes","pkys","val","ii","state","isInputView","submitDisabled","automDisabledFields","sums","ageField","ageFieldPromptText","fieldDisabled","results","handleTransition","bind","handleNumberinput","handleChange","handleFocus","handleReset","this","setState","window","scrollTo","slice","evt","newValue","target","checkAllFields","currentField","numFields","id","parseInt","element","document","getElementById","focus","activeElement","blur","moveToNextField","temp_value","event","nextFieldId","toLowerCase","currentId","virheet","push","fieldNum","isNaN","allFieldsTrue","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","array","number","parseFloat","sisaltopisteet","age","resultsView","inputView","numberInputs","submittable","text","className","onFocus","onChange","autoComplete","sumPoints","suhtlPisteet","toFixed","persentiiliarvo","tuentarve","tuenTarve","onClick","disabled","kaavioData","uv","pv","median","alue","find","score","datab","Arvo","renderLineChart","width","height","data","stroke","vertical","dataKey","domain","interval","tickLine","padding","left","right","unit","tick","x","y","payload","offset","textAnchor","x1","y1","x2","y2","stroke-width","tickCount","minTickGap","label","angle","position","strokeWidth","isAnimationActive","dot","strokeDasharray","dateNow","src","alt","print","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.60fa4617.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {ComposedChart, Scatter, Line, CartesianGrid,  XAxis, YAxis, Tooltip, Area } from 'recharts';\n//recharts http://recharts.org/en-US/guide/getting-started chartjs?\n\nclass Formi extends React.Component {\n  //_numOfFields = 52; //test\n\n  constructor(props) {\n    let numOfFields = 39; //kysymysten lukumäärä ( 1 kysymys = Kysymys + perustelukysymys )\n    let pKysymykset = [3,4,5,6,7,8,15,18,20,21,22,23,24]; //kysymykset joiden kohdalla on 2 kenttää, kysymys ja perustelu\n    let osaAlue = [//kysymyksen / kysymysparin osa-alue\n      {\n        name:\"KonMT\",\n        value: [5, 6, 7, 8, 9, 10, 15, 18, 19, 20, 30, 31, 32, 33, 34, 37, 38, 39]},\n      {\n        name:\"KonEiMT\",\n        value: [1, 2, 3, 4, 11, 25, 26, 27, 28, 29]},\n      {\n        name:\"Tunne\",\n        value: [21, 22, 23, 24, 35]},\n      {\n        name:\"RelevKäyt\",\n        value: [13, 14, 17, 36]},\n      {\n        name:\"VäärUsk\",\n        value: [12, 16]},\n     ];\n\n    //Persentiilitaulukko\n    let persentiiliSarake = [4,5,6,7,8]; //ikä\n    let csvPersentiili = `\n    1;3;3;3;3;3\n    2;3;3;3;3;3\n    3;3;3;3;3;3\n    4;4;3;3;3;3\n    5;7;3;3;3;3\n    6;11;3;3;3;3\n    7;16;3;3;3;3\n    8;18;3;3;3;3\n    9;25;3;3;3;3\n    10;33;3;3;3;3\n    11;37;3;3;3;3\n    12;44;4;3;3;3\n    13;52;14;4;3;3\n    14;57;16;5;3;3\n    15;64;22;5;3;3\n    16;69;24;6;3;3\n    17;76;28;8;3;3\n    18;80;36;10;3;3\n    19;83;44;11;3;3\n    20;87;48;12;3;3\n    21;90;50;13;3;3\n    22;90;55;14;3;3\n    23;90;57;16;3;3\n    24;90;59;22;5;3\n    25;96;69;24;5;3\n    26;96;76;29;6;3\n    27;97;77;36;9;3\n    28;97;81;37;17;5\n    29;97;86;41;19;7\n    30;97;87;47;28;8\n    31;97;95;64;33;9\n    32;97;97;72;52;10\n    33;97;97;83;63;17\n    34;97;97;87;71;30\n    35;97;97;89;76;39\n    36;97;97;97;82;62\n    37;97;97;97;87;78\n    38;97;97;97;87;91\n    39;97;97;97;87;91\n    40;97;97;97;87;91`;\n    //CSV taulukko js-taulukoksi:\n    let row = {};\n    let persentiili = {};\n    csvPersentiili = csvPersentiili.trim().replace(/ /g, \"\");//remove spaces\n    csvPersentiili = csvPersentiili.split(/\\r?\\n/);//split newlines\n    csvPersentiili = csvPersentiili.map(i => i.trim().split(\";\"))//split \";\"\n    csvPersentiili.forEach( item => {\n      row = {};\n      for(let i=0; i<persentiiliSarake.length; i++){\n        row[persentiiliSarake[i]] = item[i+1].trim();\n      }\n      persentiili[item[0]] = row; \n    });\n\n    numOfFields += pKysymykset.length; //total number of fields \n    let fields = Array(numOfFields).fill(\"\"); //field values\n    let fieldSubmittable = Array(numOfFields).fill(false);\n    //Testausarvoja:\n    //fields = [1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1];\n    //fieldSubmittable = Array(numOfFields).fill(true);\n\n    //valmistellaan info taulukko jonka pohjalta luodaan kentät, ja translation taulukko\n    let key = 0\n    let pKys = false;\n    let pKysb = 0; //kysymyksen tyyppi 0=kysymys ilman perustelukysymystä, 1, 2 = perustelukysymys\n    let type;\n    let translation = [];\n    let fieldsInfo = [];\n    for(let i=0; i<numOfFields; i++){\n      if(pKysymykset.includes(key) && !pKys) {\n        pKys = true;\n        type = \"Perustelukysymys\";\n        pKysb = 2;\n      }\n      else {\n        if(pKysymykset.includes(key+1)) {\n          pKysb = 1;\n        }\n        else {\n          pKysb = 0;\n        }\n        pKys = false;\n        key++; //samalla key:llä voi olla monta kysymystä, varsinainen ja perusteluk.\n      }\n      if(pKysymykset.includes(key) && !pKys) {\n      }\n      fieldsInfo[i] = {key: key, pkys: pKysb, type: type, val: fields[i]}\n      //luodaan translation taulukko\n      if(!pKys){ translation[key] = i; }\n    }\n\n    let name;\n    let translated;\n    //päivitetään osaAlueet absoluuttisilla kentän numeroilla\n    for(let i=0; i<osaAlue.length; i++){\n      name = osaAlue[i].name;\n      for(let ii=0; ii<osaAlue[i].value.length; ii++){\n        translated = translation[ osaAlue[i].value[ii] ];\n        osaAlue[i].value[ii] = translated\n        fieldsInfo[translated].type = name;\n      }\n    }\n\n    //päivitetään pKysymykset absoluuttisilla kentän numeroilla   \n    pKysymykset = pKysymykset.map(i => translation[i])\n\n    super(props);\n    this.state = {\n      isInputView: true,\n      submitDisabled: true,\n      numOfFields: numOfFields,\n      fieldsInfo: fieldsInfo,\n      automDisabledFields: [],\n      sums: [],\n      ageField: \"\", \n      ageFieldPromptText: \"\",\n      persentiili: persentiili,\n      fieldSubmittable: fieldSubmittable,\n      fieldDisabled: Array(numOfFields).fill(false),\n      results: \"\",\n    };\n\n\n    this.handleTransition = this.handleTransition.bind(this);\n    //this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNumberinput = this.handleNumberinput.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n \n  handleTransition(){ //toggle\n    this.setState({isInputView: !this.state.isInputView},() => {\n      window.scrollTo(0, 0)\n    });\n  }\n\n  handleReset(){\n    const fieldsInfo = this.state.fieldsInfo.slice(); //reset fieldsInfo values\n    for(let i=0; i<fieldsInfo.length; i++){ fieldsInfo[i].val=\"\"; }\n    this.setState({fieldsInfo: fieldsInfo});\n    \n    this.setState({fieldSubmittable: this.state.fieldSubmittable.slice().fill(false)});\n    this.setState({fieldDisabled: this.state.fieldDisabled.slice().fill(false)});\n\n    this.setState({submitDisabled: true, ageField: \"\", ageFieldPromptText: \"\"});\n  }\n\n  handleChange(evt){ //agefield\n    let newValue = evt.target.value.replace(/[^x45678]/g, '').slice(-1); //keep x, numbers 4-8\n    this.setState({[evt.target.name]: newValue},() => this.checkAllFields());\n\n    if(newValue!==\"\") { this.setState({ageFieldPromptText: \"\"}); }\n  }\n\n  moveToNextField(currentField){\n    let numFields = this.state.fieldsInfo.length-1; //number of fields = 52\n    let id = parseInt(currentField);\n    while (id < numFields) {//find next allowed id\n      id++;\n      if(this.state.fieldDisabled[id]===false) { break; } \n    }\n    const element = document.getElementById(id);\n    if(element !== null) {element.focus();}\n    if(parseInt(currentField)===numFields) { document.activeElement.blur(); } //fix to prevent last field selection\n  }\n\n  handleFocus(evt){\n    //moving selection to allowed field (tabulator)\n    if(this.state.fieldDisabled[evt.target.id]===true) { //true = field not allowed for select\n      this.moveToNextField(evt.target.id);\n    }\n\n    //cursor at the end\n    let temp_value = evt.target.value\n    evt.target.value = ''\n    evt.target.value = temp_value\n  }\n\n  handleNumberinput(event){\n    let newValue = event.target.value.replace(/[^01xX]/g, '').slice(-1); //keep: 0 1 x X\n\n    const fieldsInfo = this.state.fieldsInfo.slice(); //copy array with slice()\n    const fieldSubmittable = this.state.fieldSubmittable.slice();\n\n    ///disabloidaan perustelykysymys kenttiä tarvittaessa\n    const fieldDisabled = this.state.fieldDisabled.slice();\n    const nextFieldId = parseInt(event.target.id)+1\n    if(fieldDisabled.length > nextFieldId) { //skip if last field\n      if(this.state.fieldsInfo[parseInt(event.target.id)].pkys===1) { //pkys 1 = kysymys jolla perustelukysymys\n        if(newValue===\"0\" || newValue.toLowerCase()===\"x\") { //Jos varsinaisessa kysymyskentässä 0 tai X, perustelukysymyskenttään X\n          fieldDisabled[nextFieldId] = true; //disable and hide field \n          fieldsInfo[nextFieldId].val = \"x\"; //set value to x\n          fieldSubmittable[nextFieldId] = true;\n        }\n        else {\n          fieldDisabled[nextFieldId] = false;\n          if(newValue===\"\") {//Tyhjä kenttä tyhjentää myös perustelukysymyskentän \n            fieldsInfo[nextFieldId].val = \"\"; \n            fieldSubmittable[nextFieldId] = false;\n          }\n        }\n      }\n    }\n\n    let currentId = event.target.id;\n\n    this.setState({fieldDisabled: fieldDisabled},() => {\n      if(newValue!==\"\") { this.moveToNextField(currentId); } //callback, move selection to next field\n    });\n\n\n    //Update changed field value\n    fieldsInfo[event.target.id].val = newValue;\n\n    //lasketaan peräkkäisten virheiden määrä ei perustelukysymyksissä välillä 0-20 (kysymys 20 = kenttä 29)\n    let virheet = 0;\n    let i = 0;\n    for (i = 0; i < 29; i++) { \n      if(fieldsInfo[i].type !== \"Perustelukysymys\") {\n        if(fieldsInfo[i].val === \"0\") {\n          virheet++;\n        }\n        else {\n          virheet=0;\n        }\n        if(virheet === 6) { break; }\n      }\n    }\n\n    if(virheet === 6) { //jos löytyi 6 tai enemmän peräkkäisiä virheitä\n      \n      if(this.state.automDisabledFields.length === 0){\n        let automDisabledFields = [];\n        for (i = 0; i < 29; i++) {\n          if(fieldsInfo[i].val === \"\") {\n            fieldDisabled[i] = true;\n            automDisabledFields.push(i);\n            fieldsInfo[i].val = \"x\";\n            fieldSubmittable[i] = true;\n          }\n        }\n        for (i = 47; i < 52; i++) {\n          if(fieldsInfo[i].val === \"\") {\n            fieldDisabled[i] = true; \n            automDisabledFields.push(i);\n            fieldsInfo[i].val = \"x\";\n            fieldSubmittable[i] = true;\n          }\n        }\n        this.setState({automDisabledFields: automDisabledFields});\n      }\n    }\n    else {\n      if(this.state.automDisabledFields.length > 0) {\n        this.state.automDisabledFields.forEach( fieldNum => {\n          fieldDisabled[fieldNum] = false; \n          fieldsInfo[fieldNum].val = \"\";\n          fieldSubmittable[fieldNum] = false;\n        });\n        this.setState({automDisabledFields: []});\n      }\n    }\n\n    this.setState({fieldsInfo: fieldsInfo});\n\n    function checkField(value) {\n      return ((value!==\"\" && !isNaN(value)) || value.toLowerCase()===\"x\")\n    }\n     //Update fieldSubmittable true/false\n    fieldSubmittable[event.target.id] = checkField(newValue);\n    this.setState({fieldSubmittable: fieldSubmittable},() => this.checkAllFields()); //update states  \n  }\n\n  checkAllFields(){\n        //Checking full FieldSubmittable array\n        let allFieldsTrue = true\n        for (let i of this.state.fieldSubmittable) {\n          if(i===false) { allFieldsTrue = false }\n        }\n        //Check Age\n        if(this.state.ageField===\"\") {\n          allFieldsTrue = false\n          this.setState({ageFieldPromptText: \"Pakollinen kenttä. Ilmoita ikä välillä 4-8\"});\n        }\n    \n        //Enable/disable submit\n        this.setState({submitDisabled: !allFieldsTrue}); \n  }\n\n  dateNow() {\n    let today = new Date();\n    let dd = String(today.getDate()).padStart(0, '0');\n    let mm = String(today.getMonth() + 1).padStart(0, '0'); //January is 0!\n    let yyyy = today.getFullYear();\n    today = dd + '.' + mm + '.' + yyyy;\n    return today\n  }\n  \n  sumPoints(array, type= \"type\"){\n    let sums = []\n    let number;\n    array.forEach( item => {\n      if(typeof(sums[item[type]]) === 'undefined') {\n        sums[item[type]] = 0;\n      }\n      number = parseFloat(item.val);\n      if(!isNaN(number)) { sums[item[type]] += number; }\n      }\n    );\n    return sums;\n  }\n\n  tuenTarve(persentiili){\n    if(isNaN(parseFloat(persentiili))) {return \"-\";}\n    if(persentiili<=6) {return \"Selvästi tuen tarpeessa\";}\n    if (persentiili<=15) {return \"Tuen tarpeessa\";}\n    if (persentiili<=25) {return \"Seurattava\";}\n    else {return \"Ei tuen tarpeessa\";}\n  }\n\n  persentiiliarvo(sisaltopisteet,age){\n    if(typeof(this.state.persentiili[sisaltopisteet]) === 'undefined') { return \"\"; }\n    if(typeof(this.state.persentiili[sisaltopisteet][age]) === 'undefined') { return \"Persentiiliarvo on saatavilla vain 4-8 vuotiaille.\"; }\n    return this.state.persentiili[sisaltopisteet][age];\n  }\n  \n  render() {\n    let resultsView;\n    let inputView;\n    let numberInputs = [];\n\n    //luodaan kysymys kenttiä\n    for(let i=0; i<this.state.fieldsInfo.length; i++){\n      let submittable = this.state.fieldSubmittable[i] ? 'submittable' : 'notsubmittable' ; \n      if(this.state.fieldDisabled[i]){submittable='disabled'};\n      let text = this.state.fieldsInfo[i].type===\"Perustelukysymys\" ? this.state.fieldsInfo[i].key+'b:' : this.state.fieldsInfo[i].key+':'; \n      numberInputs.push(\n      <div key={i}>\n        <span className=\"label\">{text}</span>\n        <input id={i} type=\"text\" className={submittable} onFocus={this.handleFocus} onChange={this.handleNumberinput} value={this.state.fieldsInfo[i].val} autoComplete=\"off\"/>\n      </div>\n      )\n    }\n\n    let results = [];\n\n    //laske taulukkoon yhteispisteet kaikille osa-alueille\n    let type = this.sumPoints(this.state.fieldsInfo,\"type\");\n    let pkys = this.sumPoints(this.state.fieldsInfo,\"pkys\");\n   \n    let sisaltopisteet = type[\"KonEiMT\"]+type[\"KonMT\"]+type[\"VäärUsk\"]+type[\"RelevKäyt\"]+type[\"Tunne\"];\n\n    let suhtlPisteet = \"Ei laskettavissa\";\n    if(pkys[1]!==0){\n      suhtlPisteet = (pkys[2]/pkys[1]*100).toFixed(1);\n    }\n\n    let persentiiliarvo = this.persentiiliarvo(sisaltopisteet,this.state.ageField);\n    let tuentarve = this.tuenTarve(persentiiliarvo);\n    \n    if(!this.state.submitDisabled) {\n      results.push(\n        <div key=\"results-field\">\n          <br />\n          KonEiMT: &nbsp; {type[\"KonEiMT\"]} /10<br />\n          KonMT: &nbsp; {type[\"KonMT\"]} /18<br />\n          VäärUsk: &nbsp; {type[\"VäärUsk\"]} /2<br />\n          RelevKäyt: &nbsp; {type[\"RelevKäyt\"]} /4<br />\n          Tunne: &nbsp; {type[\"Tunne\"]} /5<br />\n          Sisältöpisteet: &nbsp; {sisaltopisteet} /39<br />\n          <br />\n          Perustelukysymysten pisteet: &nbsp; {pkys[2]} /13 <br />\n          Perustelukysymysten suhteelliset pisteet: {suhtlPisteet}<br />\n          <br />\n          Persentiiliarvo: {persentiiliarvo} <br />\n          Tuen tarve: {tuentarve}<br />\n          <br />\n        </div>\n      )\n    }\n\n    if(this.state.isInputView){ //Aloitusnäkymä\n    inputView = (\n      <div>\n        <div className=\"bluebar\"></div>\n        <div className=\"inputview\">\n        <form><h2>Pragma-testi</h2>\n        <button className=\"resetbutton\" type='button' onClick={this.handleReset}>Tyhjennä</button>\n        <br /><b>Täyttöohje:</b><br />\n        Merkitse kysymysten pisteet numeroin ja välistä jätetty kysymys merkillä X.<br /><br /><br />\n          <div className=\"age\">\n            <b>Lapsen ikä:</b><input type=\"text\" name=\"ageField\" onChange={this.handleChange} value={this.state.ageField} autoComplete=\"off\"/>\n            &nbsp; <span className=\"errorprompt\">{this.state.ageFieldPromptText}</span>\n          </div>\n          <br /><br /><b>Kysymykset:</b>  <br />\n          <div className=\"numberinputs\">\n            {numberInputs}\n          </div>\n          <button type='button' onClick={this.handleTransition} disabled={this.state.submitDisabled}>Näytä tulokset</button>\n        </form>\n        </div>\n        {results}\n      </div>\n\n    );}\n\n    else { //Tulosnäkymä\n\n      // Kaavion pohja arvot\n      let kaavioData = [\n        {\n          name: '4-vuotiaat', age: '4', uv: 7, pv: 9, median: 12, alue: [7,19]},\n        {\n          name: '5-vuotiaat', age: '5', uv: 14, pv: 16, median: 22, alue: [14,28]},\n        {\n          name: '6-vuotiaat', age: '6', uv: 23, pv: 25, median: 31, alue: [23,33],},\n        {\n          name: '7-vuotiaat', age: '7', uv: 28, pv: 29, median: 32, alue: [28,36],},\n        {\n          name: '8-vuotiaat', age: '8', uv: 33, pv: 33, median: 36, alue: [33,37],},\n      ];\n\n      // Lisätään kaavion piste\n      let row = kaavioData.find(element => element.age === this.state.ageField); \n      if(typeof row !== 'undefined') {\n        row.score = sisaltopisteet\n      }\n\n\n      let datab = []\n      for(let i=0; i<this.state.fieldsInfo.length; i++){\n        datab.push({key: i, name: \"Arvo \"+(i+1), Arvo: this.state.fieldsInfo[i]},)\n      }\n\n      //ei käytössä\n      const renderQuarterTick = (tickProps) => { \n        const { x, y, payload } = tickProps;\n        const { value, offset } = payload;\n        return <text x={x} y={y} textAnchor=\"middle\">{value}</text>;\n      };\n\n      //pysty-viivat\n      const xAxisTick = ({ x, y, payload }) => {\n        const { value, offset } = payload;\n        return (\n        <svg>\n          <text x={x} y={y+9} textAnchor=\"middle\">{value}</text>\n          <line x1={x+71} y1={y-9} x2={x+71} y2={y - 369} stroke=\"LightGray\" stroke-width=\"1\" />\n        </svg>\n        );\n      };\n\n      //vaaka-viivat\n      const yAxisTick = ({ x, y, payload }) => {\n        const { value, offset } = payload;\n        const height = 28.5/3;\n        const width = 800-62;\n        return (\n        <svg>\n          <text x={x-10} y={y+4} textAnchor=\"middle\">{value}</text>\n          <line x1={x+9} y1={y-height} x2={x+width} y2={y-height} stroke=\"LightGray\" stroke-width=\"1\" />\n          <line x1={x+9} y1={y-height*2} x2={x+width} y2={y-height*2} stroke=\"LightGray\" stroke-width=\"1\" />\n        </svg>\n        );\n      };\n\n      const renderLineChart = (\n        <div className=\"chart\">\n        <ComposedChart width={800} height={400} data={kaavioData}>\n\n          <CartesianGrid stroke=\"LightGray\" vertical={false} className='linestyle'/>\n          <XAxis dataKey=\"name\" type=\"category\" domain={['dataMin', 'dataMax']} interval={0} tickLine={false} padding={{ left: 72, right: 72 }} unit=\"\" tick={xAxisTick} />\n          <YAxis tickCount={14} minTickGap={0} domain={[0, 39]} tick={yAxisTick} label={{ value: 'Kokonaispisteet', angle: -90, offset: 12, position: 'insideLeft', textAnchor: 'middle' }}/>\n\n          <Area dataKey=\"alue\" stroke=\"#888888\" name=\"Tyypillinen suoritusalue\" fill=\"#999999\" strokeWidth={0} isAnimationActive={false}/>\n          <Line dataKey=\"median\" stroke=\"#000000\" name=\"Mediaani\" strokeWidth={1} dot={false} isAnimationActive={false} />\n          <Line dataKey=\"pv\" stroke=\"#000000\" name=\"Alaraja 16%\" strokeDasharray=\"2 2\" strokeWidth={2} dot={false} isAnimationActive={false}/>\n          <Line dataKey=\"uv\" stroke=\"#000000\" name=\"Alaraja 25%\" strokeDasharray=\"2 2\" strokeWidth={2} dot={false} isAnimationActive={false} />\n          <Scatter name=\"Kokonaispisteet\" dataKey=\"score\" fill=\"black\" />\n\n          <Tooltip label='-vuotiaat' unit='-vuotiaat'/>\n        </ComposedChart>\n        </div>\n      );\n     \n      \n      resultsView = (\n      <div className=\"resultsView\">\n        <button onClick={this.handleTransition}>Takaisin</button>\n        <h2>Pragma-testi</h2><br />\n\n        Testaajan nimi: ________________________________________<br /><br />\n        Lapsen nimi: ________________________________________<br /><br />\n        Lapsen ikä: {this.state.ageField}<br /><br />\n        Testauspäivämäärä: {this.dateNow()}<br />\n        {results}\n        <br />\n        {renderLineChart}\n        <br />\n        <img src=\"selite.png\" alt=\"Selite\"/><br /><br />\n        (ks. tarkemmin kaavion tulkinnasta testikäsikirjan liite 4)<br />\n        <button className=\"printbutton\" type='button' onClick={window.print}>Tulosta</button>\n      </div>\n      );\n    }\n\n    return (\n      <div>\n        {inputView}\n        {resultsView}\n      </div>\n    );\n  }\n}\n// ========================================\nReactDOM.render(<Formi />, document.getElementById(\"root\"));\n"],"sourceRoot":""}